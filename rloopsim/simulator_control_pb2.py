# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simulator_control.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='simulator_control.proto',
  package='simproto',
  syntax='proto3',
  serialized_pb=_b('\n\x17simulator_control.proto\x12\x08simproto\"\x9c\x01\n\nSimCommand\x12\x34\n\x07\x63ommand\x18\x01 \x01(\x0e\x32#.simproto.SimCommand.SimCommandEnum\"X\n\x0eSimCommandEnum\x12\x10\n\x0cRunSimulator\x10\x00\x12\x12\n\x0ePauseSimulator\x10\x01\x12\x11\n\rStopSimulator\x10\x02\x12\r\n\tStartPush\x10\x03\"\'\n\x03\x41\x63k\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"3\n\x07SimInit\x12\x14\n\x0c\x63onfig_files\x18\x01 \x03(\t\x12\x12\n\noutput_dir\x18\x02 \x01(\t2p\n\nSimControl\x12\x33\n\nControlSim\x12\x14.simproto.SimCommand\x1a\r.simproto.Ack\"\x00\x12-\n\x07InitSim\x12\x11.simproto.SimInit\x1a\r.simproto.Ack\"\x00\x62\x06proto3')
)



_SIMCOMMAND_SIMCOMMANDENUM = _descriptor.EnumDescriptor(
  name='SimCommandEnum',
  full_name='simproto.SimCommand.SimCommandEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RunSimulator', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PauseSimulator', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='StopSimulator', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='StartPush', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=106,
  serialized_end=194,
)
_sym_db.RegisterEnumDescriptor(_SIMCOMMAND_SIMCOMMANDENUM)


_SIMCOMMAND = _descriptor.Descriptor(
  name='SimCommand',
  full_name='simproto.SimCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='simproto.SimCommand.command', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SIMCOMMAND_SIMCOMMANDENUM,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=194,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='simproto.Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='simproto.Ack.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='simproto.Ack.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=235,
)


_SIMINIT = _descriptor.Descriptor(
  name='SimInit',
  full_name='simproto.SimInit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config_files', full_name='simproto.SimInit.config_files', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dir', full_name='simproto.SimInit.output_dir', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=237,
  serialized_end=288,
)

_SIMCOMMAND.fields_by_name['command'].enum_type = _SIMCOMMAND_SIMCOMMANDENUM
_SIMCOMMAND_SIMCOMMANDENUM.containing_type = _SIMCOMMAND
DESCRIPTOR.message_types_by_name['SimCommand'] = _SIMCOMMAND
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
DESCRIPTOR.message_types_by_name['SimInit'] = _SIMINIT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SimCommand = _reflection.GeneratedProtocolMessageType('SimCommand', (_message.Message,), dict(
  DESCRIPTOR = _SIMCOMMAND,
  __module__ = 'simulator_control_pb2'
  # @@protoc_insertion_point(class_scope:simproto.SimCommand)
  ))
_sym_db.RegisterMessage(SimCommand)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'simulator_control_pb2'
  # @@protoc_insertion_point(class_scope:simproto.Ack)
  ))
_sym_db.RegisterMessage(Ack)

SimInit = _reflection.GeneratedProtocolMessageType('SimInit', (_message.Message,), dict(
  DESCRIPTOR = _SIMINIT,
  __module__ = 'simulator_control_pb2'
  # @@protoc_insertion_point(class_scope:simproto.SimInit)
  ))
_sym_db.RegisterMessage(SimInit)



_SIMCONTROL = _descriptor.ServiceDescriptor(
  name='SimControl',
  full_name='simproto.SimControl',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=290,
  serialized_end=402,
  methods=[
  _descriptor.MethodDescriptor(
    name='ControlSim',
    full_name='simproto.SimControl.ControlSim',
    index=0,
    containing_service=None,
    input_type=_SIMCOMMAND,
    output_type=_ACK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='InitSim',
    full_name='simproto.SimControl.InitSim',
    index=1,
    containing_service=None,
    input_type=_SIMINIT,
    output_type=_ACK,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SIMCONTROL)

DESCRIPTOR.services_by_name['SimControl'] = _SIMCONTROL

# @@protoc_insertion_point(module_scope)
